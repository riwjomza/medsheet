import Head from 'next/head'
import Popup from '../components/Popup'
import Image from 'next/image'
import { useEffect, useState } from 'react'
import styles from '../styles/Home.module.css'
import { database } from '../firebaseConfig';
import {
  collection,
  addDoc,
  getDocs,
  doc,
  updateDoc,
  deleteDoc
} from 'firebase/firestore';
import { useRouter } from 'next/router';
export default function module() {
  const [ID, setID] = useState(null);
  const [name, setName] = useState('');
  const [age, setAge] = useState(null);
  const [weight, setWeight] = useState(null);
  const [hn, setHN] = useState(null);
  const [an, setAN] = useState(null);
  const [bed, setBed] = useState(null);
  const [drug, setDrug] = useState(null);
  const [diagn, setDiagn] = useState(null);
  const [date, setDate] = useState(null);
  const [ward, setWard] = useState(null); 
  const [fireData, setFireData] = useState([]);
  const [isUpdate, setIsUpdate] = useState(false);
//   const databaseRef = collection(database,'medicalsheet1');
  let router = useRouter()
  useEffect(() => {
    let token = sessionStorage.getItem('Token')
    if (token) {userlogout
      getData()
    }
    if (!token) {
      router.push('/login')
    }
    

  
  }, [])

  const addData = () => {
    addDoc(collection(database,'medicalsheet1'), {
      name: name,
      age: Number(age),
	    weight: Number(weight),
      hn: Number(hn),
      an: Number(an),
      bed:Number(bed),
      drug : drug ,
      diagn : diagn,
      date : date,
      ward :ward

    })
      .then(() => {
        alert('Data Sent')
        getData()
        setName('')
        setAge(null)
		    setWeight(null)
        setHN(null)
        setAN(null)
        setBed(null)
        setDrug(null)
        setDiagn(null)
        setDate(null)
        setWard(null)

      })
      .catch((err) => {
        console.error(err);
      })
  }

  const getData = async () => {
    await getDocs(collection(database,'medicalsheet1'))
      .then((response) => {
        setFireData(response.docs.map((data) => {
          return { ...data.data(), id: data.id }
        }))
      })
  }
  

  const getID = (id, name, age, weight,hn,an,bed,drug,diagn,date,ward) => {
    setID(id)
    setName(name)
    setAge(age)
	  setWeight(weight)
    setHN(hn)
    setAN(an)
    setBed(bed)
    setDrug(drug)
    setDiagn(diagn)
    setDate(date)
    setWard(ward)
    setIsUpdate(true)
  }

  const updateFields = () => {
    let fieldToEdit = doc(database, 'medicalsheet1', ID);
    updateDoc(fieldToEdit, {
      name: name,
      age: Number(age),
	    weight: Number(weight) ,
      hn: Number(hn),
      an: Number(an),
      bed : Number(bed),
      drug : drug,
      diagn : diagn,
      date :  Date(date),
      ward : Number(ward)

    })
    .then(() => {
      alert('Data Updated')
      getData()
      setName('')
      setAge(null)
      setIsUpdate(false)
    })
    .catch((err) => {
      console.log(err);
    })
  }

  const deleteDocument = (id) => {
    let fieldToEdit = doc(database, 'medicalsheet1', id);
    deleteDoc(fieldToEdit)
    .then(() => {
      alert('Data Deleted')
      getData()
    })
    .catch((err) => {
      alert('Cannot Delete that field..')
    })
  }

  const logout = () => {
    sessionStorage.removeItem('Token')
    router.push('/register')
  }
  
  const {buttonPopup, setButtonPopup} = useState(false);
  
  return (
    <div className={styles.container}>
      <Head>
        <title>Medical</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
  
    <main className={styles.main}>
        <div>
          <button onClick={logout}>Log Out</button>
        </div>


        <h1>รายชื่อผู้ป่วยใน</h1>
    
    
        <input
          placeholder='Name'
          className={styles.inputBox}
          type="text"
          value={name}
          onChange={event => setName(event.target.value)}
        />
        <input
          placeholder='Age'
          className={styles.inputBox}
          type="number"
          value={age}
          onChange={event => setAge(event.target.value)}
        />

		<input
          placeholder='weight'
          className={styles.inputBox}
          type="number"
          value={weight}
          onChange={event => setWeight(event.target.value)}
        />

    <input
          placeholder='HN'
          className={styles.inputBox}
          type="text"
          value={hn}
          onChange={event => setHN(event.target.value)}
        />
     <input
          placeholder='AN'
          className={styles.inputBox}
          type="text"
          value={an}
          onChange={event => setAN(event.target.value)}
        />
     <input
          placeholder='Bed Number'
          className={styles.inputBox}
          type="text"
          value={bed}
          onChange={event => setBed(event.target.value)}
        />
      <input
          placeholder='ประวัติการแพ้ยา'
          className={styles.inputBox}
          type="text"
          value={drug}
          onChange={event => setDrug(event.target.value)}
        />

     <input
          placeholder='การวินิจฉัย'
          className={styles.inputBox}
          type="text"
          value={diagn}
          onChange={event => setDiagn(event.target.value)}
        />
     <input
          placeholder='Date'
          className={styles.inputBox}
          type="Date"
          value={diagn}
          onChange={event => setDate(event.target.value)}
        />
      <input
          placeholder='Ward Number'
          className={styles.inputBox}
          type="text"
          value={ward}
          onChange={event => setWard(event.target.value)}
        />
        

        {isUpdate ? (
          <button
            className={styles.button}
            onClick={updateFields}
          >
            UPDATE
          </button>
        ) : (
          <button
            className={styles.button}
            onClick={addData}
          >
            ADD
          </button>
        )}
      
        <div>
          {fireData.map((data) => {
            return (
              <div className={styles.flex}>
                <h3>Name: {data.name}</h3>
                <p>HN: {data.hn}</p>
                <p>AN: {data.an}</p>
                <p>Bed: {data.bed}</p>
                <p>Date: {data.date}</p>
                <p>ward: {data.ward}</p>

                <button
                  className={styles.button}
                  onClick={() => getID(data.id, data.name, data.age, data.weight, data.hn, data.an, data.bed ,data.drug, data.diagn, data.Date, data.ward)}
                >Update</button>
                <button
                  className={styles.button}
                  onClick={() => deleteDocument(data.id)}
                >Delete</button>
              </div>
            )
          })}
        </div>
      </main>
    </div>
  )
}